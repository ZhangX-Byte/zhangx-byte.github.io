{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":1,"renderable":0},{"_id":"source/img/about/about-bg.jpg","path":"img/about/about-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/avatar/head.jpg","path":"img/avatar/head.jpg","modified":1,"renderable":0},{"_id":"source/img/avatar/home-bg.jpg","path":"img/avatar/home-bg.jpg","modified":1,"renderable":0},{"_id":"source/img/dapr/dapr.svg","path":"img/dapr/dapr.svg","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/beantech.css","path":"css/beantech.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/archive.styl","path":"css/archive.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/beantech.min.css","path":"css/beantech.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/donate.css","path":"css/donate.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/signature.styl","path":"css/signature.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/rocket.styl","path":"css/rocket.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/widget.styl","path":"css/widget.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/toc.styl","path":"css/toc.styl","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/hux-blog.js","path":"js/hux-blog.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/toc.js","path":"js/toc.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/bootstrap.js","path":"js/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":1,"renderable":1},{"_id":"source/img/header_img/archive.jpg","path":"img/header_img/archive.jpg","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/css/bootstrap.css","path":"css/bootstrap.css","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/images/ironman.png","path":"css/images/ironman.png","modified":1,"renderable":1},{"_id":"themes/huweihuang/source/css/images/rocket.png","path":"css/images/rocket.png","modified":1,"renderable":1},{"_id":"source/img/header_img/archives-widget.jpg","path":"img/header_img/archives-widget.jpg","modified":1,"renderable":0},{"_id":"source/img/article_header/article_bg.jpg","path":"img/article_header/article_bg.jpg","modified":1,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":1,"renderable":0},{"_id":"themes/huweihuang/source/js/jquery.js","path":"js/jquery.js","modified":1,"renderable":1},{"_id":"source/img/blog.jpg","path":"img/blog.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/home.jpg","path":"img/header_img/home.jpg","modified":1,"renderable":0},{"_id":"source/img/header_img/tag.png","path":"img/header_img/tag.png","modified":1,"renderable":0},{"_id":"source/img/article_header/article_header.png","path":"img/article_header/article_header.png","modified":1,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":1,"renderable":0},{"_id":"source/img/header_img/home2.png","path":"img/header_img/home2.png","modified":1,"renderable":0},{"_id":"source/img/header_img/404.png","path":"img/header_img/404.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"8b9e17605b69cf3d2b0cbf8ddc5c7357d538ccd9","modified":1599824799619},{"_id":"source/CNAME","hash":"c719ac69ad749301adea5168dc81e2f9ff5c3e83","modified":1599824799619},{"_id":"source/.DS_Store","hash":"5922ec11b7ba4d81b7e55a152193107c9940911d","modified":1599824799619},{"_id":"themes/huweihuang/_config.yml","hash":"93c0edabaf1d97a8f429dbd9ff9d97286edb3b56","modified":1599824799697},{"_id":"themes/huweihuang/LICENSE","hash":"c48eaae47a703282e0ffe7b91d69366452046214","modified":1599824799697},{"_id":"source/_posts/dapr-readme.md","hash":"6c4557ade4f98a22f89a16d1e86bf33d340e073f","modified":1599824799619},{"_id":"source/about/index.md","hash":"591c2fc8feee7e288bf736895eab5dc009f25b6b","modified":1600009938660},{"_id":"source/_posts/doc-overview.md","hash":"f57e17adb3b4a308632d452da4e3e21eed905838","modified":1600009807405},{"_id":"source/img/.DS_Store","hash":"22360e704245517c036fd963ef80a26a837e5956","modified":1599824799619},{"_id":"source/tags/index.md","hash":"fc1c291c9325c2cbf4960233834c5d3f74f5217f","modified":1599824799697},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1599824799666},{"_id":"themes/huweihuang/layout/404.ejs","hash":"2e8d719fab50014b7963d3c2f4ee34c23e749d7b","modified":1599824799697},{"_id":"themes/huweihuang/layout/about.ejs","hash":"96c08fc3580b842ad9d8f37f2cdf02e6fa57d7bc","modified":1599824799712},{"_id":"themes/huweihuang/layout/archive.ejs","hash":"197a1ee1b499bf87c9e77a484ca1f6cc58313e1d","modified":1599824799712},{"_id":"themes/huweihuang/layout/index.ejs","hash":"1bb0e537503c24499eee4ea17fe3e4f46bac1309","modified":1599824799712},{"_id":"themes/huweihuang/layout/keynote.ejs","hash":"e177b9e4a159f40b512f4ae1bfd928be4ab60840","modified":1599824799712},{"_id":"themes/huweihuang/layout/layout.ejs","hash":"389fc11a45676f94b77ebd2cb0d658a0358979c8","modified":1599824799712},{"_id":"themes/huweihuang/layout/page.ejs","hash":"f77a9eb0e09931eac85e8244027eb5678c7b0705","modified":1599824799712},{"_id":"themes/huweihuang/languages_to_be_added/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1599824799697},{"_id":"themes/huweihuang/layout/post.ejs","hash":"a9f8d1a310839492cfdd0c7cae64e60a2ef1b935","modified":1599824799712},{"_id":"themes/huweihuang/layout/tags.ejs","hash":"63911a99e6daf9968bfdd7d69f0d3d697039902e","modified":1599824799712},{"_id":"themes/huweihuang/languages_to_be_added/default.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/en.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1599824799697},{"_id":"themes/huweihuang/languages_to_be_added/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1599824799697},{"_id":"source/img/about/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1599824799619},{"_id":"source/img/about/about-bg.jpg","hash":"c92ad7eed5af90b07f73733ae54330d5744c8023","modified":1599824799619},{"_id":"source/img/avatar/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1599824799634},{"_id":"source/img/avatar/head.jpg","hash":"29cd76dc99a7dfef64ffb8195ab75d52e8282bcb","modified":1599824799634},{"_id":"source/img/avatar/home-bg.jpg","hash":"e81513cb4806bfa0cd25a678fd3fa230ffa316bf","modified":1599824799634},{"_id":"source/img/dapr/dapr.svg","hash":"654cf8ca7f10be90ba2e4923748325254abc6998","modified":1599824799634},{"_id":"themes/huweihuang/layout/_partial/footer.ejs","hash":"fccf113d47c51359026357e1eb08ca1f7edda8ab","modified":1599824799697},{"_id":"themes/huweihuang/layout/_partial/head.ejs","hash":"07e23da21331914b971bb0317f545ea677484180","modified":1599824799697},{"_id":"themes/huweihuang/layout/_partial/pagination.ejs","hash":"cd61e4dbbf6020ad094c8e66ec06e8c38ebcd122","modified":1599824799697},{"_id":"themes/huweihuang/layout/_partial/toc.ejs","hash":"aa41fc56f2fa03559aa266fc062772e9e3bbebbf","modified":1599824799697},{"_id":"themes/huweihuang/layout/_partial/sidebar.ejs","hash":"bc7834dd769eeac94a76ffd9cfbb13a622861b62","modified":1599824799697},{"_id":"themes/huweihuang/layout/_partial/nav.ejs","hash":"e65bfec3d14a9eb9f1e09b592bb34023e6bf6e83","modified":1599824799697},{"_id":"themes/huweihuang/layout/_partial/header.ejs","hash":"10d5e0966895f86373b0652e9ad2df69d742bfe4","modified":1599824799697},{"_id":"themes/huweihuang/layout/_widget/archive.ejs","hash":"ad9fb0073d40fe90bfe3a1e3246e0b07e12b3ecf","modified":1599824799697},{"_id":"themes/huweihuang/layout/_widget/featured-tags.ejs","hash":"e29431fa78c81d7c521bb1f7be356651fcde959c","modified":1599824799697},{"_id":"themes/huweihuang/layout/_widget/category.ejs","hash":"c32e6fb8f3a07c5cbaffcebf93c357237c18b009","modified":1599824799697},{"_id":"themes/huweihuang/layout/_widget/friends-blog.ejs","hash":"b185fcffb0d181ddd9eb2259af38cf7d82fb2846","modified":1599824799697},{"_id":"themes/huweihuang/layout/_widget/recent-posts.ejs","hash":"814dd716083a8a75eb31f9d2d6ab28150b01c533","modified":1599824799712},{"_id":"themes/huweihuang/layout/_widget/short-about.ejs","hash":"66e9c11fb694143748a74a7e40329c60744924ec","modified":1599824799712},{"_id":"themes/huweihuang/source/css/beantech.css","hash":"5e9bee0a553da83a3efd4e9bc975a0ebd13b1b7d","modified":1599824799712},{"_id":"themes/huweihuang/source/css/archive.styl","hash":"bcb216ef65804c97b1a5dbe5f519fc171a13aaf1","modified":1599824799712},{"_id":"themes/huweihuang/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1599824799712},{"_id":"themes/huweihuang/source/css/donate.css","hash":"948c148076e7e0e0f78225f753813012938f5022","modified":1599824799712},{"_id":"themes/huweihuang/source/css/highlight.styl","hash":"831f8195f3577ba5bea374f2e24b90054d445055","modified":1599824799712},{"_id":"themes/huweihuang/source/css/signature.styl","hash":"63ae8051f59d5e69544647cc4173eabc81d99aae","modified":1599824799712},{"_id":"themes/huweihuang/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1599824799712},{"_id":"themes/huweihuang/source/css/rocket.styl","hash":"0abbccdbcd6cce70e8a0bab7152c38adc0b708f1","modified":1599824799712},{"_id":"themes/huweihuang/source/css/widget.styl","hash":"f996466e299c68274145ba5afaca9b6d1dd83114","modified":1599824799712},{"_id":"themes/huweihuang/source/css/toc.styl","hash":"e197d57dc5312b20974193b6991c779e266fadca","modified":1599824799712},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1599824799712},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1599824799712},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1599824799712},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1599824799728},{"_id":"themes/huweihuang/source/js/hux-blog.min.js","hash":"ee99af17a1a69ac8d85a695fed0349ba202789ae","modified":1599824799728},{"_id":"themes/huweihuang/source/js/bootstrap.min.js","hash":"313da686ebbe387064f2d1899c64ea562b81eb40","modified":1599824799728},{"_id":"themes/huweihuang/source/js/hux-blog.js","hash":"3d3c93e42a9990b2a2e6df5a08e9816f9a221e0f","modified":1599824799728},{"_id":"themes/huweihuang/source/js/toc.js","hash":"4ffe95b7755b035ee1b41664fa72b0ebea29c3f8","modified":1599824799728},{"_id":"themes/huweihuang/source/js/totop.js","hash":"f796b09b4f6177c3674a8c1542a8c92e8590cb5c","modified":1599824799728},{"_id":"themes/huweihuang/source/js/jquery.tagcloud.js","hash":"448017ff32f75f444ed7985d10a21b3ad92ab100","modified":1599824799728},{"_id":"themes/huweihuang/source/css/bootstrap.min.css","hash":"1818a346630e7133a1f194669f613f613fcfa97c","modified":1599824799712},{"_id":"themes/huweihuang/source/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1599824799712},{"_id":"themes/huweihuang/source/js/bootstrap.js","hash":"5d69034fb6eded2e5961ea54dd47129a88cd5182","modified":1599824799728},{"_id":"themes/huweihuang/source/js/jquery.nav.js","hash":"bc6383fa2aa8f437978cf044a3b6f10a65114398","modified":1599824799728},{"_id":"source/img/header_img/archive.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1599824799650},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1599824799681},{"_id":"themes/huweihuang/source/css/bootstrap.css","hash":"d1a24afac31222d70b4e001e0361ef045aa42043","modified":1599824799712},{"_id":"themes/huweihuang/source/js/jquery.min.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1599824799728},{"_id":"themes/huweihuang/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1599824799712},{"_id":"themes/huweihuang/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1599824799712},{"_id":"source/img/header_img/archives-widget.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1599824799650},{"_id":"source/img/article_header/article_bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1599824799619},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1599824799681},{"_id":"themes/huweihuang/source/js/jquery.js","hash":"4bb763dc96da604aed08ac024a1a3f5de73eea39","modified":1599824799728},{"_id":"source/img/blog.jpg","hash":"a76af0b98dbe92ca2d21babcef13f094e409554b","modified":1599824799634},{"_id":"source/img/header_img/home.jpg","hash":"8f1c440427a4aa86b623503a926c027e2e10cd66","modified":1599824799666},{"_id":"source/img/header_img/tag.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1599824799666},{"_id":"source/img/article_header/article_header.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1599824799634},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1599824799650},{"_id":"source/img/header_img/home2.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1599824799666},{"_id":"source/img/header_img/404.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1599824799650},{"_id":"public/post-sitemap.xml","hash":"0e7e41eb7b96c89c52c5254488485b65d9724984","modified":1600169963919},{"_id":"public/page-sitemap.xml","hash":"88c1fd819f6f4f6625913b2e81080396fece7c1d","modified":1600169963937},{"_id":"public/tag-sitemap.xml","hash":"520f9997113cdce0a63b0484d75c0a71226b83d9","modified":1600169963944},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1600169963944},{"_id":"public/sitemap.xml","hash":"26e3853ba1c60408ae5db2bfe609251d02dbeb94","modified":1600169963945},{"_id":"public/about/index.html","hash":"65a92ca481391199c263295c582dde789b7213c6","modified":1600169963948},{"_id":"public/tags/index.html","hash":"978e97b742c25c0d133e416659f0d578e64fb374","modified":1600169963948},{"_id":"public/404.html","hash":"ad7f12366125de06a2be746a2b92ad5557a46f7b","modified":1600169963948},{"_id":"public/archives/index.html","hash":"8e692fd6c1ff515befd925c3d7713cc54efafb34","modified":1600169963948},{"_id":"public/archives/2020/index.html","hash":"3de841173138485162bb4c41d1b5c1fed958e300","modified":1600169963948},{"_id":"public/archives/2020/09/index.html","hash":"1717b6b2bc3e9b61885a273ec19c4a3690d095a5","modified":1600169963948},{"_id":"public/tags/Dapr/index.html","hash":"f059127cfb89987d02f348b446619c3fdb6fee98","modified":1600169963948},{"_id":"public/tags/原文翻译/index.html","hash":"283779d4a4a78233e3a48f711ca7a3436b88fc8b","modified":1600169963948},{"_id":"public/index.html","hash":"5d57e51bce06fe8e0ce3872f20dfe64e7211cc1a","modified":1600169963948},{"_id":"public/article/doc-overview/index.html","hash":"f15c8e6277e86d2e00ff764ce3e2add6b3720df0","modified":1600169963948},{"_id":"public/article/dapr-readme/index.html","hash":"d8b5471bf80fba46123e7452ee370d998573a023","modified":1600169963948},{"_id":"public/CNAME","hash":"c719ac69ad749301adea5168dc81e2f9ff5c3e83","modified":1600169963951},{"_id":"public/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1600169963951},{"_id":"public/img/about/about-bg.jpg","hash":"c92ad7eed5af90b07f73733ae54330d5744c8023","modified":1600169963951},{"_id":"public/img/avatar/head.jpg","hash":"29cd76dc99a7dfef64ffb8195ab75d52e8282bcb","modified":1600169963951},{"_id":"public/img/avatar/home-bg.jpg","hash":"e81513cb4806bfa0cd25a678fd3fa230ffa316bf","modified":1600169963952},{"_id":"public/img/dapr/dapr.svg","hash":"654cf8ca7f10be90ba2e4923748325254abc6998","modified":1600169963952},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1600169964211},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1600169964212},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1600169964212},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1600169964212},{"_id":"public/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1600169964212},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1600169964212},{"_id":"public/css/donate.css","hash":"f65ac8363d8d215adb896158e7b45165db259a47","modified":1600169964241},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1600169964241},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1600169964243},{"_id":"public/css/highlight.css","hash":"c58b4569c086e477a00dcbf5a95a166fe5fecfb0","modified":1600169964243},{"_id":"public/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1600169964243},{"_id":"public/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1600169964243},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1600169964243},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1600169964249},{"_id":"public/css/toc.css","hash":"f756b9e1b2208d2e5b0f3d2ac5e4fea3b7da0e10","modified":1600169964249},{"_id":"public/css/rocket.css","hash":"9456fd92f729e09d6de8cda70f95d78e0d789c70","modified":1600169964250},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1600169964250},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1600169964250},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1600169964250},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1600169964250},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1600169964250},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1600169964250},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1600169964251},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1600169964251},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1600169964251},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1600169964251},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1600169964251},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1600169964251},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1600169964252},{"_id":"public/img/header_img/archive.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1600169964253},{"_id":"public/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1600169964253},{"_id":"public/img/header_img/archives-widget.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1600169964253},{"_id":"public/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1600169964264},{"_id":"public/img/article_header/article_bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1600169964268},{"_id":"public/img/header_img/home.jpg","hash":"8f1c440427a4aa86b623503a926c027e2e10cd66","modified":1600169964287},{"_id":"public/img/blog.jpg","hash":"a76af0b98dbe92ca2d21babcef13f094e409554b","modified":1600169964287},{"_id":"public/img/header_img/tag.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1600169964297},{"_id":"public/img/article_header/article_header.png","hash":"d9fa12f1e40924a0db57761d09d52dce450b4f7b","modified":1600169964300},{"_id":"public/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1600169964302},{"_id":"public/img/header_img/home2.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1600169964303},{"_id":"public/img/header_img/404.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1600169964306}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原","header-img":"/img/header_img/404.png","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原\"\nheader-img: \"/img/header_img/404.png\"\n---\n","date":"2020-09-11T11:46:39.619Z","updated":"2020-09-11T11:46:39.619Z","path":"404.html","title":"","comments":1,"_id":"ckf3vvpyz0000yougnxl1v0f1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"ABOUT","date":"2020-09-11T00:59:25.000Z","description":null,"header-img":"/img/about/about-bg.jpg","_content":"\n# Dapr\n\nCurrent Version: 0.10.0\n\n---\n鉴于 Dapr 即将发布 1.0 版本，我将对 Dapr 在 Java8 、.Net5、Golang、Python3 的运用做成系列文章以抛砖引玉。\n\n> *注：* Dapr 将在 2020 年底或者 2021 年初发布 1.0 稳定版。.NET5 将在 11 月份发布正式版。\n\n## Dapr 概念\n\n此节将包含部分官方文档翻译以及我对 Dapr 的理解，如有必要，将对源码进行解读。\n\n### 官方文档翻译\n\n- {% post_link dapr-readme %}\n- {% post_link doc-overview %}\n\n### 通过 Java8 使用 Dapr\n\n### 通过 .Net5 使用 Dapr\n\n### 通过 Golang 使用 Dapr\n\n### 通过 Python3 使用 Dapr\n\n## 一些章节\n\n此章节是 Dapr 0.3.0 版本我发布过的一些内容。从版本号来看确实有挺大的差距。但仍具参考价值。\n\n- [Dapr 运用](https://www.cnblogs.com/Zhang-Xiang/p/12035354.html)\n  - 使用 `Asp.Net Core` 包含3个服务\n    - ProductService\n    - StorageService\n- [Dapr 运用之 Java gRPC 调用篇](https://www.cnblogs.com/Zhang-Xiang/p/12058097.html)\n  - 使用 Java 实现 gRPC 服务，并通过 Dapr 调用\n- [Dapr Pub/Sub 集成 RabbitMQ 、Golang、Java、DotNet Core](https://www.cnblogs.com/Zhang-Xiang/p/12106577.html)\n  - 通过 Dapr 完成 Go 与 Java 的调用，并完成 Pub/Sub\n","source":"about/index.md","raw":"---\ntitle: ABOUT\ndate: 2020-09-11 08:59:25\ndescription: \nheader-img: \"/img/about/about-bg.jpg\"\n---\n\n# Dapr\n\nCurrent Version: 0.10.0\n\n---\n鉴于 Dapr 即将发布 1.0 版本，我将对 Dapr 在 Java8 、.Net5、Golang、Python3 的运用做成系列文章以抛砖引玉。\n\n> *注：* Dapr 将在 2020 年底或者 2021 年初发布 1.0 稳定版。.NET5 将在 11 月份发布正式版。\n\n## Dapr 概念\n\n此节将包含部分官方文档翻译以及我对 Dapr 的理解，如有必要，将对源码进行解读。\n\n### 官方文档翻译\n\n- {% post_link dapr-readme %}\n- {% post_link doc-overview %}\n\n### 通过 Java8 使用 Dapr\n\n### 通过 .Net5 使用 Dapr\n\n### 通过 Golang 使用 Dapr\n\n### 通过 Python3 使用 Dapr\n\n## 一些章节\n\n此章节是 Dapr 0.3.0 版本我发布过的一些内容。从版本号来看确实有挺大的差距。但仍具参考价值。\n\n- [Dapr 运用](https://www.cnblogs.com/Zhang-Xiang/p/12035354.html)\n  - 使用 `Asp.Net Core` 包含3个服务\n    - ProductService\n    - StorageService\n- [Dapr 运用之 Java gRPC 调用篇](https://www.cnblogs.com/Zhang-Xiang/p/12058097.html)\n  - 使用 Java 实现 gRPC 服务，并通过 Dapr 调用\n- [Dapr Pub/Sub 集成 RabbitMQ 、Golang、Java、DotNet Core](https://www.cnblogs.com/Zhang-Xiang/p/12106577.html)\n  - 通过 Dapr 完成 Go 与 Java 的调用，并完成 Pub/Sub\n","updated":"2020-09-13T15:12:18.660Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckf3vvpzp0001yougzsvdahen","content":"<h1><span id=\"dapr\">Dapr</span></h1>\n<p>Current Version: 0.10.0</p>\n<hr>\n<p>鉴于 Dapr 即将发布 1.0 版本，我将对 Dapr 在 Java8 、.Net5、Golang、Python3 的运用做成系列文章以抛砖引玉。</p>\n<blockquote>\n<p><em>注：</em> Dapr 将在 2020 年底或者 2021 年初发布 1.0 稳定版。.NET5 将在 11 月份发布正式版。</p>\n</blockquote>\n<h2><span id=\"dapr-概念\">Dapr 概念</span></h2>\n<p>此节将包含部分官方文档翻译以及我对 Dapr 的理解，如有必要，将对源码进行解读。</p>\n<h3><span id=\"官方文档翻译\">官方文档翻译</span></h3>\n<ul>\n<li>\n<a href=\"/article/dapr-readme/\" title=\"简介\">简介</a>\n</li>\n<li>\n<a href=\"/article/doc-overview/\" title=\"Dapr 概述\">Dapr 概述</a>\n</li>\n</ul>\n<h3><span id=\"通过-java8-使用-dapr\">通过 Java8 使用 Dapr</span></h3>\n<h3><span id=\"通过-net5-使用-dapr\">通过 .Net5 使用 Dapr</span></h3>\n<h3><span id=\"通过-golang-使用-dapr\">通过 Golang 使用 Dapr</span></h3>\n<h3><span id=\"通过-python3-使用-dapr\">通过 Python3 使用 Dapr</span></h3>\n<h2><span id=\"一些章节\">一些章节</span></h2>\n<p>此章节是 Dapr 0.3.0 版本我发布过的一些内容。从版本号来看确实有挺大的差距。但仍具参考价值。</p>\n<ul>\n<li><a href=\"https://www.cnblogs.com/Zhang-Xiang/p/12035354.html\" target=\"_blank\" rel=\"noopener\">Dapr 运用</a>\n<ul>\n<li>使用 <code>Asp.Net Core</code> 包含3个服务\n<ul>\n<li>ProductService</li>\n<li>StorageService</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://www.cnblogs.com/Zhang-Xiang/p/12058097.html\" target=\"_blank\" rel=\"noopener\">Dapr 运用之 Java gRPC 调用篇</a>\n<ul>\n<li>使用 Java 实现 gRPC 服务，并通过 Dapr 调用</li>\n</ul>\n</li>\n<li><a href=\"https://www.cnblogs.com/Zhang-Xiang/p/12106577.html\" target=\"_blank\" rel=\"noopener\">Dapr Pub/Sub 集成 RabbitMQ 、Golang、Java、DotNet Core</a>\n<ul>\n<li>通过 Dapr 完成 Go 与 Java 的调用，并完成 Pub/Sub</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1>Dapr</h1>\n<p>Current Version: 0.10.0</p>\n<hr>\n<p>鉴于 Dapr 即将发布 1.0 版本，我将对 Dapr 在 Java8 、.Net5、Golang、Python3 的运用做成系列文章以抛砖引玉。</p>\n<blockquote>\n<p><em>注：</em> Dapr 将在 2020 年底或者 2021 年初发布 1.0 稳定版。.NET5 将在 11 月份发布正式版。</p>\n</blockquote>\n<h2>Dapr 概念</h2>\n<p>此节将包含部分官方文档翻译以及我对 Dapr 的理解，如有必要，将对源码进行解读。</p>\n<h3>官方文档翻译</h3>\n<ul>\n<li>\n<a href=\"/article/dapr-readme/\" title=\"简介\">简介</a>\n</li>\n<li>\n<a href=\"/article/doc-overview/\" title=\"Dapr 概述\">Dapr 概述</a>\n</li>\n</ul>\n<h3>通过 Java8 使用 Dapr</h3>\n<h3>通过 .Net5 使用 Dapr</h3>\n<h3>通过 Golang 使用 Dapr</h3>\n<h3>通过 Python3 使用 Dapr</h3>\n<h2>一些章节</h2>\n<p>此章节是 Dapr 0.3.0 版本我发布过的一些内容。从版本号来看确实有挺大的差距。但仍具参考价值。</p>\n<ul>\n<li><a href=\"https://www.cnblogs.com/Zhang-Xiang/p/12035354.html\" target=\"_blank\" rel=\"noopener\">Dapr 运用</a>\n<ul>\n<li>使用 <code>Asp.Net Core</code> 包含3个服务\n<ul>\n<li>ProductService</li>\n<li>StorageService</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://www.cnblogs.com/Zhang-Xiang/p/12058097.html\" target=\"_blank\" rel=\"noopener\">Dapr 运用之 Java gRPC 调用篇</a>\n<ul>\n<li>使用 Java 实现 gRPC 服务，并通过 Dapr 调用</li>\n</ul>\n</li>\n<li><a href=\"https://www.cnblogs.com/Zhang-Xiang/p/12106577.html\" target=\"_blank\" rel=\"noopener\">Dapr Pub/Sub 集成 RabbitMQ 、Golang、Java、DotNet Core</a>\n<ul>\n<li>通过 Dapr 完成 Go 与 Java 的调用，并完成 Pub/Sub</li>\n</ul>\n</li>\n</ul>\n"},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"/img/header_img/tag.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"/img/header_img/tag.png\"\n---\n","date":"2020-09-11T11:46:39.697Z","updated":"2020-09-11T11:46:39.697Z","path":"tags/index.html","comments":1,"_id":"ckf3vvpzt0003yougpuybw876","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Dapr 概述","catalog":true,"toc_nav_num":true,"date":"2020-09-11T05:47:55.000Z","subtitle":"docs/overview","header-img":"/img/dapr/dapr.svg","catagories":["Dapr"],"_content":"\n## Dapr 概述\n\n---\n\n[Dapr overview](https://github.com/dapr/docs/tree/master/overview)\n\nDapr 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。企业开发者使用 Dapr 可以轻松构建弹性、无状态和有状态运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。\n\n### 任何开发语言、任何开发框架、运行在任何地方\n\n---\n\n我们正处于云应用浪潮中。开发者使用 Web + Database 架构（例如经典3层设计）会比较轻松，但当面对天生具备分布式属性的微服务应用架构来说可能就比较吃力了。要成为一个分布式系统专家是有难度的事情，你也没必要成为一个分布式系统专家。开发者应该专注于业务逻辑，同时依赖各种云平台以使应用程序拥有可伸缩性（scale）、容错性（resiliency）、可维护性（maintainability）、弹性（elasticity） 以及云原生架构的其它属性。\n\n这就是 Dapr 切入点。Dapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。\n\n### 云和边缘微服务构建块\n\n---\n\n当架构微服务应用程序时有很多东西需要考虑。而当构建微服务应用程序时 Dapr 提供常用功能的最佳实践。开发者可以按标准在微服务中使用 Dapr 提供的常用功能并且部署到任何环境。Dapr 通过提供分布式系统构建块以支撑这种能力。\n\n这些构建块中每一个块都是独立的，意味着你可以在你的应用程序中使用一个、几个或者全部构建块。在 Dapr 的首次发布中，提供以下构建块：\n\n构建块|描述\n--|--\n服务调用（Service Invocation）| 容错 service-to-service invocation 使方法调用（包括重试调用）远程服务，无论这些服务位于任何被支持的托管环境。\n状态管理（State Management）| 通过状态管理存储键/值对，可以同时在你的应用程序中实现长时间运行、高可用、有状态服务和无状态服务。状态存储是可插拔的并且可以使用 Azure CosmosDB， Azure SQL Server， PostgreSQL， AWS DynamoDB 或者 Redis。\n发布和订阅消息（Publish and Subscribe Messaging）| 发布事件和订阅主题。\n资源绑定（Resource Bindings）| 带有触发器的资源绑定进一步构建在事件驱动的架构之上，通过从任何外部源(如数据库、队列、文件系统等)接收和发送事件来实现伸缩性和容错性。\nActor 模式（Actors）| 有状态和无状态对象的模式，通过方法和状态封装使并发变得简单。Dapr 在它的 actor 运行时中提供很多能力，包括并发、状态、actor 激活/停用生命周期管理、定时器和唤醒 actor 的提醒。\n可观察性（Observability）| Dapr 发出指标、日志和根据以调试和监控 Dapr 和用户应用程序。Dapr支持分布式跟踪，以使用 W3C 跟踪上下文标准和 Open Telemetry 发送到不同的监视工具轻松地诊断和服务生产中的服务间调用。\n信息安全（Secrets）| Dapr 提供信息安全管理并且集成到公共云和本地，以供应用程序代码检索使用。\n\n### 边车架构\n\n---\n\nDapr 通过边车架构以暴露它的 APIs （要么通过程序要么通过一个进程），不需要应用程序代码嵌入任何 Dapr 运行时代码。这使得其它运行时集成 Dapr 变得简单，就像提供隔离的应用程序逻辑以改善可支持性。\n\n### 托管环境\n\n---\n\nDapr 可以在多个环境上托管，包括为本地开发环境自托管，或者部署到一组虚拟机、K8S和边缘（如Azure IoT edge）。\n\n#### 自托管\n\n自托管模式下，Dapr 作为一个隔离的边车进程运行，你的服务可以通过 HTTP 或者 gRPC 调用。自托管模式下，你也可以把 Dapr 部署到一组虚拟机下。\n\n#### K8S 托管\n\n在容器托管环境比如 K8s，Dapr 以一个边车容器的方式和应用程序容器运行在同一个 pod 中。\n\n### 开发语言 SDKs 和框架\n\n为了使 Dapr 在不同的语言中运用更加自然，Dapr 对 Go、Java、JavaScript、.NET 和 Python 提供特定的 SDK。Dapr 构建块中的功能通过这些 SDKs 暴露，比如：通过一个类型化的语言而不是调用 http/gRPC 接口以保存状态、发布一个事件或者创建一个 actor。这使你能够使用自己选择的语言编写无状态和有状态函数以及 actor 的组合。并且由于这些 SDKs 共享 Dapr 运行时，你可以获得跨语言的 actor 和函数支持。\n\n#### SDKs\n\n- C++ SDK\n- Go SDK\n- Java SDK\n- JavaScript SDK\n- Python SDK\n- .NET SDK\n\n> 注意： Dapr 是语言无关的提供 REST HTTTP API 除了 protobuf 客户端外。\n\n#### 开发框架\n\nDapr 可以用于任何开发框架。这里有一些已经集成到 Dapr 的。\n\n##### Web\n\n在 Dapr .NET SDK 中集成了 `ASP.NET Core`，`ASP.NET Core` 带来了状态路由控制器，该控制器响应来自其他服务的发布/订阅事件。\n\n在 Dapr Java SDK 你可以找到 Spring Boot 集成。\n\nDapr 很容易与 Python Flask 和 node Express 集成，您可以在入门示例中找到它们。\n\n##### Actors\n\nDapr SKDs 支持虚拟 actors ，虚拟 actors 是使并发简单的有状态对象，具有方法和状态封装，并且是为可扩展的分布式应用程序设计的。\n\n##### Azure Functions\n\nDapr 通过扩展与 Azure 函数运行时集成，扩展允许函数与 Dapr 无缝交互。Azual 函数提供一个事件驱动编程模式并且 Dapr 提供云原生构建块。通过这个扩展，你可以同时提供 serverless 和事件驱动应用。更多信息请阅读[用于 Dapr 的Azure 函数扩展](https://cloudblogs.microsoft.com/opensource/2020/07/01/announcing-azure-functions-extension-for-dapr/) 和访问[Azure 函数扩展](https://github.com/dapr/azure-functions-extension)以试用示例。\n\n##### Dapr 工作流\n\n为了使开发人员能够轻松构建使用 Dapr 功能（包括诊断和多语言支持）的工作流应用程序，可以使用Dapr工作流。Dapr 集成了工作流引擎比如 Logic Apps，更多信息阅读[使用 Dapr 和 Logic Apps 的云原生工作流](https://cloudblogs.microsoft.com/opensource/2020/05/26/announcing-cloud-native-workflows-dapr-logic-apps/)和访问[Dapr 工作流](https://github.com/dapr/workflows)试用示例。\n\n### 为运维而设计\n\n---\n\nDapr 是为运维而设计的。[Dapr 仪表板](https://github.com/dapr/dashboard)（通过 Dapr CLI 安装），提供一个以网页为基础的 UI 使你能看信息、看日志和 Dapr 边车更多的信息。\n\n监视仪表板提供了对 Dapr 系统服务和边车的更深层次的可见性，而 Dapr 的可观察性功能提供了对应用程序的深入了解，如跟踪和指标。\n\n### 运行与任何地方\n\n---\n\n#### 本地开发机器以自托管模式运行 Dapr\n\nDapr 可以配置为自托管模式以运行在你本地机器上。每一个运行的服务有一个 Dapr 运行时进程（或者边车），这个进程（或边车）通过配置以使用状态存储、发布/订阅、绑定组件和其它构建块。\n\n你可以使用 Dapr CLI 在你本地机器上运行 Dapr 启用应用程序。通过入门示例试用。\n\n#### 以 K8S 模式运行 Dapr \n\nDapr 可以配置以运行在任何 K8S 集群上。在 K8S 上 `dapr-sidecar-injector` 和 `dapr-operator` 服务提供了一流的集成，以将 Dapr 作为 sidecar 容器启动与服务容器在同一 pod 中，并提供了已配置到集群中的 Dapr 组件更新的通知。\n\n`dapr-sentry` 服务是一个证书颁发机构，可启用 Dapr 边车实例之间的相互 TLS 进行安全数据加密。有关Sentry服务的更多信息，请阅读[安全概述](https://github.com/dapr/docs/blob/master/concepts/security/README.md#dapr-to-dapr-communication)。\n\n在 Kubernetes 集群中部署并运行启用了 Dapr 的应用程序非常简单，只需在部署方案中添加一些注释即可。您可以在Kubernetes入门示例中看到一些示例。使用 Kubernetes [入门示例](https://github.com/dapr/quickstarts/tree/master/hello-kubernetes)进行尝试。\n\n---\n\n## 参考\n\n- [1] [Implement resilient applications](https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/)\n\n    > Resiliency is the ability to recover from failures and continue to function. It isn't about avoiding failures but accepting the fact that failures will happen and responding to them in a way that avoids downtime or data loss. The goal of resiliency is to return the application to a fully functioning state after a failure.\n    > 翻译：Resiliency 是一种从故障中恢复并且继续工作的能力。并不是避开故障而是接受可能会故障的事实并且以某种方式回应它们以避免停机或者数据丢失。Resiliency 的目标是在发生故障后将应用程序返回到完全正常的状态。\n","source":"_posts/doc-overview.md","raw":"---\ntitle: Dapr 概述\ncatalog: true\ntoc_nav_num: true\ndate: 2020-09-11 13:47:55\nsubtitle: docs/overview\nheader-img: /img/dapr/dapr.svg\ntags: \n- Dapr\n- 原文翻译\ncatagories:\n- Dapr\n---\n\n## Dapr 概述\n\n---\n\n[Dapr overview](https://github.com/dapr/docs/tree/master/overview)\n\nDapr 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。企业开发者使用 Dapr 可以轻松构建弹性、无状态和有状态运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。\n\n### 任何开发语言、任何开发框架、运行在任何地方\n\n---\n\n我们正处于云应用浪潮中。开发者使用 Web + Database 架构（例如经典3层设计）会比较轻松，但当面对天生具备分布式属性的微服务应用架构来说可能就比较吃力了。要成为一个分布式系统专家是有难度的事情，你也没必要成为一个分布式系统专家。开发者应该专注于业务逻辑，同时依赖各种云平台以使应用程序拥有可伸缩性（scale）、容错性（resiliency）、可维护性（maintainability）、弹性（elasticity） 以及云原生架构的其它属性。\n\n这就是 Dapr 切入点。Dapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。\n\n### 云和边缘微服务构建块\n\n---\n\n当架构微服务应用程序时有很多东西需要考虑。而当构建微服务应用程序时 Dapr 提供常用功能的最佳实践。开发者可以按标准在微服务中使用 Dapr 提供的常用功能并且部署到任何环境。Dapr 通过提供分布式系统构建块以支撑这种能力。\n\n这些构建块中每一个块都是独立的，意味着你可以在你的应用程序中使用一个、几个或者全部构建块。在 Dapr 的首次发布中，提供以下构建块：\n\n构建块|描述\n--|--\n服务调用（Service Invocation）| 容错 service-to-service invocation 使方法调用（包括重试调用）远程服务，无论这些服务位于任何被支持的托管环境。\n状态管理（State Management）| 通过状态管理存储键/值对，可以同时在你的应用程序中实现长时间运行、高可用、有状态服务和无状态服务。状态存储是可插拔的并且可以使用 Azure CosmosDB， Azure SQL Server， PostgreSQL， AWS DynamoDB 或者 Redis。\n发布和订阅消息（Publish and Subscribe Messaging）| 发布事件和订阅主题。\n资源绑定（Resource Bindings）| 带有触发器的资源绑定进一步构建在事件驱动的架构之上，通过从任何外部源(如数据库、队列、文件系统等)接收和发送事件来实现伸缩性和容错性。\nActor 模式（Actors）| 有状态和无状态对象的模式，通过方法和状态封装使并发变得简单。Dapr 在它的 actor 运行时中提供很多能力，包括并发、状态、actor 激活/停用生命周期管理、定时器和唤醒 actor 的提醒。\n可观察性（Observability）| Dapr 发出指标、日志和根据以调试和监控 Dapr 和用户应用程序。Dapr支持分布式跟踪，以使用 W3C 跟踪上下文标准和 Open Telemetry 发送到不同的监视工具轻松地诊断和服务生产中的服务间调用。\n信息安全（Secrets）| Dapr 提供信息安全管理并且集成到公共云和本地，以供应用程序代码检索使用。\n\n### 边车架构\n\n---\n\nDapr 通过边车架构以暴露它的 APIs （要么通过程序要么通过一个进程），不需要应用程序代码嵌入任何 Dapr 运行时代码。这使得其它运行时集成 Dapr 变得简单，就像提供隔离的应用程序逻辑以改善可支持性。\n\n### 托管环境\n\n---\n\nDapr 可以在多个环境上托管，包括为本地开发环境自托管，或者部署到一组虚拟机、K8S和边缘（如Azure IoT edge）。\n\n#### 自托管\n\n自托管模式下，Dapr 作为一个隔离的边车进程运行，你的服务可以通过 HTTP 或者 gRPC 调用。自托管模式下，你也可以把 Dapr 部署到一组虚拟机下。\n\n#### K8S 托管\n\n在容器托管环境比如 K8s，Dapr 以一个边车容器的方式和应用程序容器运行在同一个 pod 中。\n\n### 开发语言 SDKs 和框架\n\n为了使 Dapr 在不同的语言中运用更加自然，Dapr 对 Go、Java、JavaScript、.NET 和 Python 提供特定的 SDK。Dapr 构建块中的功能通过这些 SDKs 暴露，比如：通过一个类型化的语言而不是调用 http/gRPC 接口以保存状态、发布一个事件或者创建一个 actor。这使你能够使用自己选择的语言编写无状态和有状态函数以及 actor 的组合。并且由于这些 SDKs 共享 Dapr 运行时，你可以获得跨语言的 actor 和函数支持。\n\n#### SDKs\n\n- C++ SDK\n- Go SDK\n- Java SDK\n- JavaScript SDK\n- Python SDK\n- .NET SDK\n\n> 注意： Dapr 是语言无关的提供 REST HTTTP API 除了 protobuf 客户端外。\n\n#### 开发框架\n\nDapr 可以用于任何开发框架。这里有一些已经集成到 Dapr 的。\n\n##### Web\n\n在 Dapr .NET SDK 中集成了 `ASP.NET Core`，`ASP.NET Core` 带来了状态路由控制器，该控制器响应来自其他服务的发布/订阅事件。\n\n在 Dapr Java SDK 你可以找到 Spring Boot 集成。\n\nDapr 很容易与 Python Flask 和 node Express 集成，您可以在入门示例中找到它们。\n\n##### Actors\n\nDapr SKDs 支持虚拟 actors ，虚拟 actors 是使并发简单的有状态对象，具有方法和状态封装，并且是为可扩展的分布式应用程序设计的。\n\n##### Azure Functions\n\nDapr 通过扩展与 Azure 函数运行时集成，扩展允许函数与 Dapr 无缝交互。Azual 函数提供一个事件驱动编程模式并且 Dapr 提供云原生构建块。通过这个扩展，你可以同时提供 serverless 和事件驱动应用。更多信息请阅读[用于 Dapr 的Azure 函数扩展](https://cloudblogs.microsoft.com/opensource/2020/07/01/announcing-azure-functions-extension-for-dapr/) 和访问[Azure 函数扩展](https://github.com/dapr/azure-functions-extension)以试用示例。\n\n##### Dapr 工作流\n\n为了使开发人员能够轻松构建使用 Dapr 功能（包括诊断和多语言支持）的工作流应用程序，可以使用Dapr工作流。Dapr 集成了工作流引擎比如 Logic Apps，更多信息阅读[使用 Dapr 和 Logic Apps 的云原生工作流](https://cloudblogs.microsoft.com/opensource/2020/05/26/announcing-cloud-native-workflows-dapr-logic-apps/)和访问[Dapr 工作流](https://github.com/dapr/workflows)试用示例。\n\n### 为运维而设计\n\n---\n\nDapr 是为运维而设计的。[Dapr 仪表板](https://github.com/dapr/dashboard)（通过 Dapr CLI 安装），提供一个以网页为基础的 UI 使你能看信息、看日志和 Dapr 边车更多的信息。\n\n监视仪表板提供了对 Dapr 系统服务和边车的更深层次的可见性，而 Dapr 的可观察性功能提供了对应用程序的深入了解，如跟踪和指标。\n\n### 运行与任何地方\n\n---\n\n#### 本地开发机器以自托管模式运行 Dapr\n\nDapr 可以配置为自托管模式以运行在你本地机器上。每一个运行的服务有一个 Dapr 运行时进程（或者边车），这个进程（或边车）通过配置以使用状态存储、发布/订阅、绑定组件和其它构建块。\n\n你可以使用 Dapr CLI 在你本地机器上运行 Dapr 启用应用程序。通过入门示例试用。\n\n#### 以 K8S 模式运行 Dapr \n\nDapr 可以配置以运行在任何 K8S 集群上。在 K8S 上 `dapr-sidecar-injector` 和 `dapr-operator` 服务提供了一流的集成，以将 Dapr 作为 sidecar 容器启动与服务容器在同一 pod 中，并提供了已配置到集群中的 Dapr 组件更新的通知。\n\n`dapr-sentry` 服务是一个证书颁发机构，可启用 Dapr 边车实例之间的相互 TLS 进行安全数据加密。有关Sentry服务的更多信息，请阅读[安全概述](https://github.com/dapr/docs/blob/master/concepts/security/README.md#dapr-to-dapr-communication)。\n\n在 Kubernetes 集群中部署并运行启用了 Dapr 的应用程序非常简单，只需在部署方案中添加一些注释即可。您可以在Kubernetes入门示例中看到一些示例。使用 Kubernetes [入门示例](https://github.com/dapr/quickstarts/tree/master/hello-kubernetes)进行尝试。\n\n---\n\n## 参考\n\n- [1] [Implement resilient applications](https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/)\n\n    > Resiliency is the ability to recover from failures and continue to function. It isn't about avoiding failures but accepting the fact that failures will happen and responding to them in a way that avoids downtime or data loss. The goal of resiliency is to return the application to a fully functioning state after a failure.\n    > 翻译：Resiliency 是一种从故障中恢复并且继续工作的能力。并不是避开故障而是接受可能会故障的事实并且以某种方式回应它们以避免停机或者数据丢失。Resiliency 的目标是在发生故障后将应用程序返回到完全正常的状态。\n","slug":"doc-overview","published":1,"updated":"2020-09-13T15:10:07.405Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckf3vvpzq0002youg59ywmec9","content":"<h2><span id=\"dapr-概述\">Dapr 概述</span></h2>\n<hr>\n<p><a href=\"https://github.com/dapr/docs/tree/master/overview\" target=\"_blank\" rel=\"noopener\">Dapr overview</a></p>\n<p>Dapr 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。企业开发者使用 Dapr 可以轻松构建弹性、无状态和有状态运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。</p>\n<h3><span id=\"任何开发语言-任何开发框架-运行在任何地方\">任何开发语言、任何开发框架、运行在任何地方</span></h3>\n<hr>\n<p>我们正处于云应用浪潮中。开发者使用 Web + Database 架构（例如经典3层设计）会比较轻松，但当面对天生具备分布式属性的微服务应用架构来说可能就比较吃力了。要成为一个分布式系统专家是有难度的事情，你也没必要成为一个分布式系统专家。开发者应该专注于业务逻辑，同时依赖各种云平台以使应用程序拥有可伸缩性（scale）、容错性（resiliency）、可维护性（maintainability）、弹性（elasticity） 以及云原生架构的其它属性。</p>\n<p>这就是 Dapr 切入点。Dapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。</p>\n<h3><span id=\"云和边缘微服务构建块\">云和边缘微服务构建块</span></h3>\n<hr>\n<p>当架构微服务应用程序时有很多东西需要考虑。而当构建微服务应用程序时 Dapr 提供常用功能的最佳实践。开发者可以按标准在微服务中使用 Dapr 提供的常用功能并且部署到任何环境。Dapr 通过提供分布式系统构建块以支撑这种能力。</p>\n<p>这些构建块中每一个块都是独立的，意味着你可以在你的应用程序中使用一个、几个或者全部构建块。在 Dapr 的首次发布中，提供以下构建块：</p>\n<table>\n<thead>\n<tr>\n<th>构建块</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>服务调用（Service Invocation）</td>\n<td>容错 service-to-service invocation 使方法调用（包括重试调用）远程服务，无论这些服务位于任何被支持的托管环境。</td>\n</tr>\n<tr>\n<td>状态管理（State Management）</td>\n<td>通过状态管理存储键/值对，可以同时在你的应用程序中实现长时间运行、高可用、有状态服务和无状态服务。状态存储是可插拔的并且可以使用 Azure CosmosDB， Azure SQL Server， PostgreSQL， AWS DynamoDB 或者 Redis。</td>\n</tr>\n<tr>\n<td>发布和订阅消息（Publish and Subscribe Messaging）</td>\n<td>发布事件和订阅主题。</td>\n</tr>\n<tr>\n<td>资源绑定（Resource Bindings）</td>\n<td>带有触发器的资源绑定进一步构建在事件驱动的架构之上，通过从任何外部源(如数据库、队列、文件系统等)接收和发送事件来实现伸缩性和容错性。</td>\n</tr>\n<tr>\n<td>Actor 模式（Actors）</td>\n<td>有状态和无状态对象的模式，通过方法和状态封装使并发变得简单。Dapr 在它的 actor 运行时中提供很多能力，包括并发、状态、actor 激活/停用生命周期管理、定时器和唤醒 actor 的提醒。</td>\n</tr>\n<tr>\n<td>可观察性（Observability）</td>\n<td>Dapr 发出指标、日志和根据以调试和监控 Dapr 和用户应用程序。Dapr支持分布式跟踪，以使用 W3C 跟踪上下文标准和 Open Telemetry 发送到不同的监视工具轻松地诊断和服务生产中的服务间调用。</td>\n</tr>\n<tr>\n<td>信息安全（Secrets）</td>\n<td>Dapr 提供信息安全管理并且集成到公共云和本地，以供应用程序代码检索使用。</td>\n</tr>\n</tbody>\n</table>\n<h3><span id=\"边车架构\">边车架构</span></h3>\n<hr>\n<p>Dapr 通过边车架构以暴露它的 APIs （要么通过程序要么通过一个进程），不需要应用程序代码嵌入任何 Dapr 运行时代码。这使得其它运行时集成 Dapr 变得简单，就像提供隔离的应用程序逻辑以改善可支持性。</p>\n<h3><span id=\"托管环境\">托管环境</span></h3>\n<hr>\n<p>Dapr 可以在多个环境上托管，包括为本地开发环境自托管，或者部署到一组虚拟机、K8S和边缘（如Azure IoT edge）。</p>\n<h4><span id=\"自托管\">自托管</span></h4>\n<p>自托管模式下，Dapr 作为一个隔离的边车进程运行，你的服务可以通过 HTTP 或者 gRPC 调用。自托管模式下，你也可以把 Dapr 部署到一组虚拟机下。</p>\n<h4><span id=\"k8s-托管\">K8S 托管</span></h4>\n<p>在容器托管环境比如 K8s，Dapr 以一个边车容器的方式和应用程序容器运行在同一个 pod 中。</p>\n<h3><span id=\"开发语言-sdks-和框架\">开发语言 SDKs 和框架</span></h3>\n<p>为了使 Dapr 在不同的语言中运用更加自然，Dapr 对 Go、Java、JavaScript、.NET 和 Python 提供特定的 SDK。Dapr 构建块中的功能通过这些 SDKs 暴露，比如：通过一个类型化的语言而不是调用 http/gRPC 接口以保存状态、发布一个事件或者创建一个 actor。这使你能够使用自己选择的语言编写无状态和有状态函数以及 actor 的组合。并且由于这些 SDKs 共享 Dapr 运行时，你可以获得跨语言的 actor 和函数支持。</p>\n<h4><span id=\"sdks\">SDKs</span></h4>\n<ul>\n<li>C++ SDK</li>\n<li>Go SDK</li>\n<li>Java SDK</li>\n<li>JavaScript SDK</li>\n<li>Python SDK</li>\n<li>.NET SDK</li>\n</ul>\n<blockquote>\n<p>注意： Dapr 是语言无关的提供 REST HTTTP API 除了 protobuf 客户端外。</p>\n</blockquote>\n<h4><span id=\"开发框架\">开发框架</span></h4>\n<p>Dapr 可以用于任何开发框架。这里有一些已经集成到 Dapr 的。</p>\n<h5><span id=\"web\">Web</span></h5>\n<p>在 Dapr .NET SDK 中集成了 <code>ASP.NET Core</code>，<code>ASP.NET Core</code> 带来了状态路由控制器，该控制器响应来自其他服务的发布/订阅事件。</p>\n<p>在 Dapr Java SDK 你可以找到 Spring Boot 集成。</p>\n<p>Dapr 很容易与 Python Flask 和 node Express 集成，您可以在入门示例中找到它们。</p>\n<h5><span id=\"actors\">Actors</span></h5>\n<p>Dapr SKDs 支持虚拟 actors ，虚拟 actors 是使并发简单的有状态对象，具有方法和状态封装，并且是为可扩展的分布式应用程序设计的。</p>\n<h5><span id=\"azure-functions\">Azure Functions</span></h5>\n<p>Dapr 通过扩展与 Azure 函数运行时集成，扩展允许函数与 Dapr 无缝交互。Azual 函数提供一个事件驱动编程模式并且 Dapr 提供云原生构建块。通过这个扩展，你可以同时提供 serverless 和事件驱动应用。更多信息请阅读<a href=\"https://cloudblogs.microsoft.com/opensource/2020/07/01/announcing-azure-functions-extension-for-dapr/\" target=\"_blank\" rel=\"noopener\">用于 Dapr 的Azure 函数扩展</a> 和访问<a href=\"https://github.com/dapr/azure-functions-extension\" target=\"_blank\" rel=\"noopener\">Azure 函数扩展</a>以试用示例。</p>\n<h5><span id=\"dapr-工作流\">Dapr 工作流</span></h5>\n<p>为了使开发人员能够轻松构建使用 Dapr 功能（包括诊断和多语言支持）的工作流应用程序，可以使用Dapr工作流。Dapr 集成了工作流引擎比如 Logic Apps，更多信息阅读<a href=\"https://cloudblogs.microsoft.com/opensource/2020/05/26/announcing-cloud-native-workflows-dapr-logic-apps/\" target=\"_blank\" rel=\"noopener\">使用 Dapr 和 Logic Apps 的云原生工作流</a>和访问<a href=\"https://github.com/dapr/workflows\" target=\"_blank\" rel=\"noopener\">Dapr 工作流</a>试用示例。</p>\n<h3><span id=\"为运维而设计\">为运维而设计</span></h3>\n<hr>\n<p>Dapr 是为运维而设计的。<a href=\"https://github.com/dapr/dashboard\" target=\"_blank\" rel=\"noopener\">Dapr 仪表板</a>（通过 Dapr CLI 安装），提供一个以网页为基础的 UI 使你能看信息、看日志和 Dapr 边车更多的信息。</p>\n<p>监视仪表板提供了对 Dapr 系统服务和边车的更深层次的可见性，而 Dapr 的可观察性功能提供了对应用程序的深入了解，如跟踪和指标。</p>\n<h3><span id=\"运行与任何地方\">运行与任何地方</span></h3>\n<hr>\n<h4><span id=\"本地开发机器以自托管模式运行-dapr\">本地开发机器以自托管模式运行 Dapr</span></h4>\n<p>Dapr 可以配置为自托管模式以运行在你本地机器上。每一个运行的服务有一个 Dapr 运行时进程（或者边车），这个进程（或边车）通过配置以使用状态存储、发布/订阅、绑定组件和其它构建块。</p>\n<p>你可以使用 Dapr CLI 在你本地机器上运行 Dapr 启用应用程序。通过入门示例试用。</p>\n<h4><span id=\"以-k8s-模式运行-dapr\">以 K8S 模式运行 Dapr</span></h4>\n<p>Dapr 可以配置以运行在任何 K8S 集群上。在 K8S 上 <code>dapr-sidecar-injector</code> 和 <code>dapr-operator</code> 服务提供了一流的集成，以将 Dapr 作为 sidecar 容器启动与服务容器在同一 pod 中，并提供了已配置到集群中的 Dapr 组件更新的通知。</p>\n<p><code>dapr-sentry</code> 服务是一个证书颁发机构，可启用 Dapr 边车实例之间的相互 TLS 进行安全数据加密。有关Sentry服务的更多信息，请阅读<a href=\"https://github.com/dapr/docs/blob/master/concepts/security/README.md#dapr-to-dapr-communication\" target=\"_blank\" rel=\"noopener\">安全概述</a>。</p>\n<p>在 Kubernetes 集群中部署并运行启用了 Dapr 的应用程序非常简单，只需在部署方案中添加一些注释即可。您可以在Kubernetes入门示例中看到一些示例。使用 Kubernetes <a href=\"https://github.com/dapr/quickstarts/tree/master/hello-kubernetes\" target=\"_blank\" rel=\"noopener\">入门示例</a>进行尝试。</p>\n<hr>\n<h2><span id=\"参考\">参考</span></h2>\n<ul>\n<li>\n<p>[1] <a href=\"https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/\" target=\"_blank\" rel=\"noopener\">Implement resilient applications</a></p>\n<blockquote>\n<p>Resiliency is the ability to recover from failures and continue to function. It isn’t about avoiding failures but accepting the fact that failures will happen and responding to them in a way that avoids downtime or data loss. The goal of resiliency is to return the application to a fully functioning state after a failure.<br>\n翻译：Resiliency 是一种从故障中恢复并且继续工作的能力。并不是避开故障而是接受可能会故障的事实并且以某种方式回应它们以避免停机或者数据丢失。Resiliency 的目标是在发生故障后将应用程序返回到完全正常的状态。</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2>Dapr 概述</h2>\n<hr>\n<p><a href=\"https://github.com/dapr/docs/tree/master/overview\" target=\"_blank\" rel=\"noopener\">Dapr overview</a></p>\n<p>Dapr 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。企业开发者使用 Dapr 可以轻松构建弹性、无状态和有状态运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。</p>\n<h3>任何开发语言、任何开发框架、运行在任何地方</h3>\n<hr>\n<p>我们正处于云应用浪潮中。开发者使用 Web + Database 架构（例如经典3层设计）会比较轻松，但当面对天生具备分布式属性的微服务应用架构来说可能就比较吃力了。要成为一个分布式系统专家是有难度的事情，你也没必要成为一个分布式系统专家。开发者应该专注于业务逻辑，同时依赖各种云平台以使应用程序拥有可伸缩性（scale）、容错性（resiliency）、可维护性（maintainability）、弹性（elasticity） 以及云原生架构的其它属性。</p>\n<p>这就是 Dapr 切入点。Dapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。</p>\n<h3>云和边缘微服务构建块</h3>\n<hr>\n<p>当架构微服务应用程序时有很多东西需要考虑。而当构建微服务应用程序时 Dapr 提供常用功能的最佳实践。开发者可以按标准在微服务中使用 Dapr 提供的常用功能并且部署到任何环境。Dapr 通过提供分布式系统构建块以支撑这种能力。</p>\n<p>这些构建块中每一个块都是独立的，意味着你可以在你的应用程序中使用一个、几个或者全部构建块。在 Dapr 的首次发布中，提供以下构建块：</p>\n<table>\n<thead>\n<tr>\n<th>构建块</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>服务调用（Service Invocation）</td>\n<td>容错 service-to-service invocation 使方法调用（包括重试调用）远程服务，无论这些服务位于任何被支持的托管环境。</td>\n</tr>\n<tr>\n<td>状态管理（State Management）</td>\n<td>通过状态管理存储键/值对，可以同时在你的应用程序中实现长时间运行、高可用、有状态服务和无状态服务。状态存储是可插拔的并且可以使用 Azure CosmosDB， Azure SQL Server， PostgreSQL， AWS DynamoDB 或者 Redis。</td>\n</tr>\n<tr>\n<td>发布和订阅消息（Publish and Subscribe Messaging）</td>\n<td>发布事件和订阅主题。</td>\n</tr>\n<tr>\n<td>资源绑定（Resource Bindings）</td>\n<td>带有触发器的资源绑定进一步构建在事件驱动的架构之上，通过从任何外部源(如数据库、队列、文件系统等)接收和发送事件来实现伸缩性和容错性。</td>\n</tr>\n<tr>\n<td>Actor 模式（Actors）</td>\n<td>有状态和无状态对象的模式，通过方法和状态封装使并发变得简单。Dapr 在它的 actor 运行时中提供很多能力，包括并发、状态、actor 激活/停用生命周期管理、定时器和唤醒 actor 的提醒。</td>\n</tr>\n<tr>\n<td>可观察性（Observability）</td>\n<td>Dapr 发出指标、日志和根据以调试和监控 Dapr 和用户应用程序。Dapr支持分布式跟踪，以使用 W3C 跟踪上下文标准和 Open Telemetry 发送到不同的监视工具轻松地诊断和服务生产中的服务间调用。</td>\n</tr>\n<tr>\n<td>信息安全（Secrets）</td>\n<td>Dapr 提供信息安全管理并且集成到公共云和本地，以供应用程序代码检索使用。</td>\n</tr>\n</tbody>\n</table>\n<h3>边车架构</h3>\n<hr>\n<p>Dapr 通过边车架构以暴露它的 APIs （要么通过程序要么通过一个进程），不需要应用程序代码嵌入任何 Dapr 运行时代码。这使得其它运行时集成 Dapr 变得简单，就像提供隔离的应用程序逻辑以改善可支持性。</p>\n<h3>托管环境</h3>\n<hr>\n<p>Dapr 可以在多个环境上托管，包括为本地开发环境自托管，或者部署到一组虚拟机、K8S和边缘（如Azure IoT edge）。</p>\n<h4>自托管</h4>\n<p>自托管模式下，Dapr 作为一个隔离的边车进程运行，你的服务可以通过 HTTP 或者 gRPC 调用。自托管模式下，你也可以把 Dapr 部署到一组虚拟机下。</p>\n<h4>K8S 托管</h4>\n<p>在容器托管环境比如 K8s，Dapr 以一个边车容器的方式和应用程序容器运行在同一个 pod 中。</p>\n<h3>开发语言 SDKs 和框架</h3>\n<p>为了使 Dapr 在不同的语言中运用更加自然，Dapr 对 Go、Java、JavaScript、.NET 和 Python 提供特定的 SDK。Dapr 构建块中的功能通过这些 SDKs 暴露，比如：通过一个类型化的语言而不是调用 http/gRPC 接口以保存状态、发布一个事件或者创建一个 actor。这使你能够使用自己选择的语言编写无状态和有状态函数以及 actor 的组合。并且由于这些 SDKs 共享 Dapr 运行时，你可以获得跨语言的 actor 和函数支持。</p>\n<h4>SDKs</h4>\n<ul>\n<li>C++ SDK</li>\n<li>Go SDK</li>\n<li>Java SDK</li>\n<li>JavaScript SDK</li>\n<li>Python SDK</li>\n<li>.NET SDK</li>\n</ul>\n<blockquote>\n<p>注意： Dapr 是语言无关的提供 REST HTTTP API 除了 protobuf 客户端外。</p>\n</blockquote>\n<h4>开发框架</h4>\n<p>Dapr 可以用于任何开发框架。这里有一些已经集成到 Dapr 的。</p>\n<h5>Web</h5>\n<p>在 Dapr .NET SDK 中集成了 <code>ASP.NET Core</code>，<code>ASP.NET Core</code> 带来了状态路由控制器，该控制器响应来自其他服务的发布/订阅事件。</p>\n<p>在 Dapr Java SDK 你可以找到 Spring Boot 集成。</p>\n<p>Dapr 很容易与 Python Flask 和 node Express 集成，您可以在入门示例中找到它们。</p>\n<h5>Actors</h5>\n<p>Dapr SKDs 支持虚拟 actors ，虚拟 actors 是使并发简单的有状态对象，具有方法和状态封装，并且是为可扩展的分布式应用程序设计的。</p>\n<h5>Azure Functions</h5>\n<p>Dapr 通过扩展与 Azure 函数运行时集成，扩展允许函数与 Dapr 无缝交互。Azual 函数提供一个事件驱动编程模式并且 Dapr 提供云原生构建块。通过这个扩展，你可以同时提供 serverless 和事件驱动应用。更多信息请阅读<a href=\"https://cloudblogs.microsoft.com/opensource/2020/07/01/announcing-azure-functions-extension-for-dapr/\" target=\"_blank\" rel=\"noopener\">用于 Dapr 的Azure 函数扩展</a> 和访问<a href=\"https://github.com/dapr/azure-functions-extension\" target=\"_blank\" rel=\"noopener\">Azure 函数扩展</a>以试用示例。</p>\n<h5>Dapr 工作流</h5>\n<p>为了使开发人员能够轻松构建使用 Dapr 功能（包括诊断和多语言支持）的工作流应用程序，可以使用Dapr工作流。Dapr 集成了工作流引擎比如 Logic Apps，更多信息阅读<a href=\"https://cloudblogs.microsoft.com/opensource/2020/05/26/announcing-cloud-native-workflows-dapr-logic-apps/\" target=\"_blank\" rel=\"noopener\">使用 Dapr 和 Logic Apps 的云原生工作流</a>和访问<a href=\"https://github.com/dapr/workflows\" target=\"_blank\" rel=\"noopener\">Dapr 工作流</a>试用示例。</p>\n<h3>为运维而设计</h3>\n<hr>\n<p>Dapr 是为运维而设计的。<a href=\"https://github.com/dapr/dashboard\" target=\"_blank\" rel=\"noopener\">Dapr 仪表板</a>（通过 Dapr CLI 安装），提供一个以网页为基础的 UI 使你能看信息、看日志和 Dapr 边车更多的信息。</p>\n<p>监视仪表板提供了对 Dapr 系统服务和边车的更深层次的可见性，而 Dapr 的可观察性功能提供了对应用程序的深入了解，如跟踪和指标。</p>\n<h3>运行与任何地方</h3>\n<hr>\n<h4>本地开发机器以自托管模式运行 Dapr</h4>\n<p>Dapr 可以配置为自托管模式以运行在你本地机器上。每一个运行的服务有一个 Dapr 运行时进程（或者边车），这个进程（或边车）通过配置以使用状态存储、发布/订阅、绑定组件和其它构建块。</p>\n<p>你可以使用 Dapr CLI 在你本地机器上运行 Dapr 启用应用程序。通过入门示例试用。</p>\n<h4>以 K8S 模式运行 Dapr</h4>\n<p>Dapr 可以配置以运行在任何 K8S 集群上。在 K8S 上 <code>dapr-sidecar-injector</code> 和 <code>dapr-operator</code> 服务提供了一流的集成，以将 Dapr 作为 sidecar 容器启动与服务容器在同一 pod 中，并提供了已配置到集群中的 Dapr 组件更新的通知。</p>\n<p><code>dapr-sentry</code> 服务是一个证书颁发机构，可启用 Dapr 边车实例之间的相互 TLS 进行安全数据加密。有关Sentry服务的更多信息，请阅读<a href=\"https://github.com/dapr/docs/blob/master/concepts/security/README.md#dapr-to-dapr-communication\" target=\"_blank\" rel=\"noopener\">安全概述</a>。</p>\n<p>在 Kubernetes 集群中部署并运行启用了 Dapr 的应用程序非常简单，只需在部署方案中添加一些注释即可。您可以在Kubernetes入门示例中看到一些示例。使用 Kubernetes <a href=\"https://github.com/dapr/quickstarts/tree/master/hello-kubernetes\" target=\"_blank\" rel=\"noopener\">入门示例</a>进行尝试。</p>\n<hr>\n<h2>参考</h2>\n<ul>\n<li>\n<p>[1] <a href=\"https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/\" target=\"_blank\" rel=\"noopener\">Implement resilient applications</a></p>\n<blockquote>\n<p>Resiliency is the ability to recover from failures and continue to function. It isn’t about avoiding failures but accepting the fact that failures will happen and responding to them in a way that avoids downtime or data loss. The goal of resiliency is to return the application to a fully functioning state after a failure.<br>\n翻译：Resiliency 是一种从故障中恢复并且继续工作的能力。并不是避开故障而是接受可能会故障的事实并且以某种方式回应它们以避免停机或者数据丢失。Resiliency 的目标是在发生故障后将应用程序返回到完全正常的状态。</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"简介","catalog":true,"toc_nav_num":true,"date":"2020-09-11T00:59:25.000Z","subtitle":"Dapr 源码 readme","header-img":"/img/dapr/dapr.svg","catagories":["Dapr"],"_content":"\n## 介绍\n\n[官方文档地址](https://github.com/dapr/dapr)\n\nDapr（Distributed Application Runtime） 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。开发者通过 Dapr 可以构建弹性、无状态、有状态的运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。\n\nDapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。\n\n---\n\n### 如何工作\n\nDapr 注入一个边车(side-car)(通过容器或者进程注入)到每一个计算单元。边车通过事件触发器交互，和计算单元通过 HTTP 或者 gRPC 协议通信。这使得 Dapr 支持现有和未来的开发语言而不需要你导入框架或者库。\n\nDapr 通过标准 HTTP 动词或者 gRPC 接口提供内建状态管理、可靠消息（至少一次投递）、触发器和绑定。这表示你可以遵循相同的编程范式写无状态、有状态和类似 Actor 模型的服务。你可以自由的选择一致性模型、线程模型和消息传递模式。\n\nDapr 在 K8S 上原生运行，作为自托管二进制文件在你的机器上、物联网设备上运行，或者做为一个容器注入到云或本地的任何系统中。\n\nDapr 使用可插拔组件状态存储和消息总线，例如：Redis、gRPC 以提供一系列通信方法，包括使用 gRPC 完成 dapr 到 dapr 的直接通信，异步 Pub-sub 以保证消息传递至少一次的语义。\n\n### 为什么使用 Dapr\n\n高性能、可扩展并且可靠的分布式应用是很困难的。而 Dapr 提供已经验证过的模式和实践方式。它把事件驱动和参与者语义统一成一个简单、一致的编程模型。它支持所有编程语言并且不限定编程框架。 你不必面对底层函数比如线程、并发控制、分区和缩放。事实上，你只需要选择一个你熟悉的 Web 框架实现一个简单的 Web 服务。\n\nDapr 在线程和状态一致性模型方面很灵活。 你可以选择多个线程，并且在不同的一致性模型中选择。这种灵活性使你可以实现高级使用场景而不需要人工约束。Dapr 是独一无二的，因为你可以在平台和基础实现之间无缝过渡，而无需重写代码。\n","source":"_posts/dapr-readme.md","raw":"---\ntitle: 简介\ncatalog: true\ntoc_nav_num: true\ndate: 2020-09-11 08:59:25\nsubtitle: Dapr 源码 readme\nheader-img: /img/dapr/dapr.svg\ntags: \n- Dapr\n- 原文翻译\ncatagories:\n- Dapr\n---\n\n## 介绍\n\n[官方文档地址](https://github.com/dapr/dapr)\n\nDapr（Distributed Application Runtime） 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。开发者通过 Dapr 可以构建弹性、无状态、有状态的运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。\n\nDapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。\n\n---\n\n### 如何工作\n\nDapr 注入一个边车(side-car)(通过容器或者进程注入)到每一个计算单元。边车通过事件触发器交互，和计算单元通过 HTTP 或者 gRPC 协议通信。这使得 Dapr 支持现有和未来的开发语言而不需要你导入框架或者库。\n\nDapr 通过标准 HTTP 动词或者 gRPC 接口提供内建状态管理、可靠消息（至少一次投递）、触发器和绑定。这表示你可以遵循相同的编程范式写无状态、有状态和类似 Actor 模型的服务。你可以自由的选择一致性模型、线程模型和消息传递模式。\n\nDapr 在 K8S 上原生运行，作为自托管二进制文件在你的机器上、物联网设备上运行，或者做为一个容器注入到云或本地的任何系统中。\n\nDapr 使用可插拔组件状态存储和消息总线，例如：Redis、gRPC 以提供一系列通信方法，包括使用 gRPC 完成 dapr 到 dapr 的直接通信，异步 Pub-sub 以保证消息传递至少一次的语义。\n\n### 为什么使用 Dapr\n\n高性能、可扩展并且可靠的分布式应用是很困难的。而 Dapr 提供已经验证过的模式和实践方式。它把事件驱动和参与者语义统一成一个简单、一致的编程模型。它支持所有编程语言并且不限定编程框架。 你不必面对底层函数比如线程、并发控制、分区和缩放。事实上，你只需要选择一个你熟悉的 Web 框架实现一个简单的 Web 服务。\n\nDapr 在线程和状态一致性模型方面很灵活。 你可以选择多个线程，并且在不同的一致性模型中选择。这种灵活性使你可以实现高级使用场景而不需要人工约束。Dapr 是独一无二的，因为你可以在平台和基础实现之间无缝过渡，而无需重写代码。\n","slug":"dapr-readme","published":1,"updated":"2020-09-11T11:46:39.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckf3vvpzu0004youg1urgyq58","content":"<h2><span id=\"介绍\">介绍</span></h2>\n<p><a href=\"https://github.com/dapr/dapr\" target=\"_blank\" rel=\"noopener\">官方文档地址</a></p>\n<p>Dapr（Distributed Application Runtime） 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。开发者通过 Dapr 可以构建弹性、无状态、有状态的运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。</p>\n<p>Dapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。</p>\n<hr>\n<h3><span id=\"如何工作\">如何工作</span></h3>\n<p>Dapr 注入一个边车(side-car)(通过容器或者进程注入)到每一个计算单元。边车通过事件触发器交互，和计算单元通过 HTTP 或者 gRPC 协议通信。这使得 Dapr 支持现有和未来的开发语言而不需要你导入框架或者库。</p>\n<p>Dapr 通过标准 HTTP 动词或者 gRPC 接口提供内建状态管理、可靠消息（至少一次投递）、触发器和绑定。这表示你可以遵循相同的编程范式写无状态、有状态和类似 Actor 模型的服务。你可以自由的选择一致性模型、线程模型和消息传递模式。</p>\n<p>Dapr 在 K8S 上原生运行，作为自托管二进制文件在你的机器上、物联网设备上运行，或者做为一个容器注入到云或本地的任何系统中。</p>\n<p>Dapr 使用可插拔组件状态存储和消息总线，例如：Redis、gRPC 以提供一系列通信方法，包括使用 gRPC 完成 dapr 到 dapr 的直接通信，异步 Pub-sub 以保证消息传递至少一次的语义。</p>\n<h3><span id=\"为什么使用-dapr\">为什么使用 Dapr</span></h3>\n<p>高性能、可扩展并且可靠的分布式应用是很困难的。而 Dapr 提供已经验证过的模式和实践方式。它把事件驱动和参与者语义统一成一个简单、一致的编程模型。它支持所有编程语言并且不限定编程框架。 你不必面对底层函数比如线程、并发控制、分区和缩放。事实上，你只需要选择一个你熟悉的 Web 框架实现一个简单的 Web 服务。</p>\n<p>Dapr 在线程和状态一致性模型方面很灵活。 你可以选择多个线程，并且在不同的一致性模型中选择。这种灵活性使你可以实现高级使用场景而不需要人工约束。Dapr 是独一无二的，因为你可以在平台和基础实现之间无缝过渡，而无需重写代码。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2>介绍</h2>\n<p><a href=\"https://github.com/dapr/dapr\" target=\"_blank\" rel=\"noopener\">官方文档地址</a></p>\n<p>Dapr（Distributed Application Runtime） 是一个可移植的（portable）、事件驱动（event-driven）的运行时框架。开发者通过 Dapr 可以构建弹性、无状态、有状态的运行在云上和边缘的微服务。并且拥抱开发语言和开发框架的多样性。</p>\n<p>Dapr 将构建微服务的最佳实践整理为开放、独立的构建块。因此，你可以选择开发语言和框架构建可移植的应用程序。每个构建块都是独立的，你可以在你的应用程序中使用它们中的一个、几个或者所有。</p>\n<hr>\n<h3>如何工作</h3>\n<p>Dapr 注入一个边车(side-car)(通过容器或者进程注入)到每一个计算单元。边车通过事件触发器交互，和计算单元通过 HTTP 或者 gRPC 协议通信。这使得 Dapr 支持现有和未来的开发语言而不需要你导入框架或者库。</p>\n<p>Dapr 通过标准 HTTP 动词或者 gRPC 接口提供内建状态管理、可靠消息（至少一次投递）、触发器和绑定。这表示你可以遵循相同的编程范式写无状态、有状态和类似 Actor 模型的服务。你可以自由的选择一致性模型、线程模型和消息传递模式。</p>\n<p>Dapr 在 K8S 上原生运行，作为自托管二进制文件在你的机器上、物联网设备上运行，或者做为一个容器注入到云或本地的任何系统中。</p>\n<p>Dapr 使用可插拔组件状态存储和消息总线，例如：Redis、gRPC 以提供一系列通信方法，包括使用 gRPC 完成 dapr 到 dapr 的直接通信，异步 Pub-sub 以保证消息传递至少一次的语义。</p>\n<h3>为什么使用 Dapr</h3>\n<p>高性能、可扩展并且可靠的分布式应用是很困难的。而 Dapr 提供已经验证过的模式和实践方式。它把事件驱动和参与者语义统一成一个简单、一致的编程模型。它支持所有编程语言并且不限定编程框架。 你不必面对底层函数比如线程、并发控制、分区和缩放。事实上，你只需要选择一个你熟悉的 Web 框架实现一个简单的 Web 服务。</p>\n<p>Dapr 在线程和状态一致性模型方面很灵活。 你可以选择多个线程，并且在不同的一致性模型中选择。这种灵活性使你可以实现高级使用场景而不需要人工约束。Dapr 是独一无二的，因为你可以在平台和基础实现之间无缝过渡，而无需重写代码。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckf3vvpzq0002youg59ywmec9","tag_id":"ckf3vvpzv0005yougnz47fcan","_id":"ckf3vvpzz0008yougsjtgzqqc"},{"post_id":"ckf3vvpzq0002youg59ywmec9","tag_id":"ckf3vvpzx0006yougmmo45emn","_id":"ckf3vvq000009yougz5s3c35f"},{"post_id":"ckf3vvpzu0004youg1urgyq58","tag_id":"ckf3vvpzv0005yougnz47fcan","_id":"ckf3vvq01000byoug6hy5im7o"},{"post_id":"ckf3vvpzu0004youg1urgyq58","tag_id":"ckf3vvpzx0006yougmmo45emn","_id":"ckf3vvq01000cyougxo5v75hp"}],"Tag":[{"name":"Dapr","_id":"ckf3vvpzv0005yougnz47fcan"},{"name":"原文翻译","_id":"ckf3vvpzx0006yougmmo45emn"}]}}